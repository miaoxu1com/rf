python 字典操作：将变量赋值到字典内后，在字典外修改变量会影响字典内变量的值，如何消除这一影响，如下：
Python 中变量赋值传递时的引用和拷贝
https://www.runoob.com/w3cnote/python-variable-references-and-copies.html

动态赋值用的是引用  所以要想不影响字典中的值 可以  k= copy.deepcopy(k) 把本身重新复制一份重新赋值给本身
或者再循环体中 每次都初始化变量 k={}这样也可以达到不影响字典内容

win 不支持shell连接

同一个软件 对比不同编码方式  画面的清晰度  清晰度可以用potplayer  暂停到同一帧画面  然后查看 当前视频编码音频编码的 信息
然后就是对比
不同软件同一种视频输出参数的情况下 那个视频更清晰保存的像素信息更多  视频锐化效果更好 最好的方式 就是查看视频中的文字  小字号的问题在视频中 能对比出来视频的质量

亮度饱和度 这些 就相当于 视频调色了  平均码率和 固定质量 都是指每一帧图片的质量

当然视频转码时  只能从好的到品质差的  如果压制源本身品质就差  单纯增加码率参数 并不能提升视频的画质
视频压制一般都会有输出模板，模板就是一套视频输出参数
当然每一个软件都有压制出画质好的一套参数 这就需要自己去实际的试验出一套画质好的参数来

对比压制后的视频  要用同一个压制视频源 就是用同一个录制软件用相同参数录制出来的短视频作为压制源

acc 比同码率的 mp3  保存的新品信息更丰富

对比了开源的视频编码器和 一些付费的其他视频编码器 
结果TMPGEncVideoMasteringWorks  完胜  压制出来的视频品质和 视频大小都是最优的

在视频剪辑器中 不要用压缩过的剪辑   压缩的越少画质损失就越少 所以在视频剪辑器中一定是源视频  这样才能保证画质 而且剪辑完   要二次压制  

